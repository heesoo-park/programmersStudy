# 실패한 코드, 최소 사각형에 맞게 좌표가 매칭되지 않음
def solution(line):
    INF = float('inf')
    location = []
    answer = []
    up = -INF
    down = INF
    right = -INF
    left = INF
    for i in range(len(line)):
        for j in range(i+1, len(line)):
            if (line[i][0]*line[j][1] - line[i][1]*line[j][0]) != 0:
                x = (line[i][1]*line[j][2] - line[i][2]*line[j][1]) / (line[i][0]*line[j][1] - line[i][1]*line[j][0])
                y = (line[i][2]*line[j][0] - line[i][0]*line[j][2]) / (line[i][0]*line[j][1] - line[i][1]*line[j][0])
                if int(x) == x and int(y) == y:
                    if [int(x), int(y)] not in location:
                        location.append([int(x), int(y)])
                        if int(x) >= right:
                            right = int(x)

                        if int(x) <= left:
                            left = int(x)
                        
                        if int(y) >= up:
                            up = int(x)

                        if int(y) <= down:
                            down = int(x)
    print("시작")
    for i in range(up-down+1 if up != down else 1):
        temp = ""
        for j in range(right-left+1 if right != left else 1):

            if [j-int((up-down+1)/2),int((right-left+1)/2)-i] in location:
                temp += "*"
            else:
                temp += "."
        answer.append(temp)
    return answer
    
# 구글링을 통해 통과한 코드
# 문자열을 바로바로 붙이는 게 아니라 배열로 구성한다음 join을 이용해서 합침
def solution(line):
    location = []

    for i in range(len(line)):
        for j in range(i+1, len(line)):
            # 왜 이걸 생각하지 못했을까
            a,b,e = line[i]
            c,d,f = line[j]
            if a*d - b*c != 0:
                x,y = (b*f-e*d)/(a*d-b*c) , (e*c-a*f)/(a*d-b*c)
                # 아래 함수도 생각 전혀 
                if x.is_integer() and y.is_integer():
                    x,y = int(x), int(y)
                    if (x,y) not in location:
                        location.append((x,y))
    
    # [0]은 첫번째 원소를 빼오는 것이고, key를 붙인 거는 두번빼 원소를 기준으로 정렬하는 것
    x_min,x_max,y_min,y_max = min(location)[0], max(location)[0],min(location,key=lambda x: x[1])[1],max(location,key=lambda x: x[1])[1]
    answer = [['.']*(abs(x_max-x_min)+1) for _ in range((abs(y_max-y_min)+1))]

    for s in location:
        a,b = s
        # 2차원 평면 상의 좌표를 2차원 배열의 좌표로 찍어내는 방법은 아래와 같다.
        x,y = abs(y_max-b), abs(x_min-a)
        answer[x][y] = '*'
    
    # 한 줄씩 join을 이용하여 붙이는 과정
    for i,v in enumerate(answer):
        answer[i] = ''.join(v)

    return answer
