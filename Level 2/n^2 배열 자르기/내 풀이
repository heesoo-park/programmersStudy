# 제일 처음 짠 코드(20개 중 12개가 시간초과)
def solution(n, left, right):
    answer = []
    rect = [[0]*n for _ in range(n)]

    for i in range(1,n+1):
      rect[i-1][i-1] = i
      for j in range(i-1):
        rect[j][i-1] = i
        rect[i-1][j] = i
    
    for i in range(len(rect)):
      answer += rect[i]

    return answer[left:right+1]

# 다음으로 짠 코드(O(N^2)은 똑같은데 하나 더 틀림)
def solution(n, left, right):
    answer = []
    rect = [[0]*n for _ in range(n)]

    for i in range(1,n+1):
      rect[i-1][:] = [i]*n
      for j in range(n):
        rect[j][i-1] = i

    for i in range(len(rect)):
      answer += rect[i]
      
    return answer[left:right+1]

# 단일 반복문으로 줄인 코드(시간초과는 나오지 않지만 4,7,8,9,10,15,16,18,19번 실패)
def solution(n, left, right):
    answer = []
    cnt = 1

    for i in range(left, right+1):
      if i <= (n-1):
        answer.append(i+1)
      else:
        if i%n != (n-1):
          if ((n+1)*(i//n)) >= i:
            answer.append((i//n)+1)
          else:
            answer.append((i//n)+1+cnt)
            cnt += 1
        else:
          answer.append(n)
          cnt = 1

    return answer
    
# 혼자서 하는 건 다 실패...
