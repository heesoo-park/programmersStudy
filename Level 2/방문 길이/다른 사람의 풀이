def solution(dirs):
    # 정답이 될 집합
    s = set()
    d = {'U': (0,1), 'D': (0, -1), 'R': (1, 0), 'L': (-1, 0)}
    # 초기 좌표를 int형 변수로 선언
    x, y = 0, 0
    for i in dirs:
        # 좌표를 계산하는 부분
        nx, ny = x + d[i][0], y + d[i][1]
        # 좌표가 좌표계를 벗어나는지 확인하는 부분
        if -5 <= nx <= 5 and -5 <= ny <= 5:
            # 왔다갔다를 조건문으로 확인하는 것이 아니라 양방향을 다 저장하는 것으로 풀이함
            s.add((x,y,nx,ny))
            s.add((nx,ny,x,y))
            x, y = nx, ny
    # 양방향이 다 s에 들어가있으므로 2로 나눠서 return
    return len(s)//2
