# #붙은 음계만 replace함수를 이용해서 치환을 함, 코드 진행은 내 것과 거의 유사함
def shap_to_lower(s):
    s = s.replace('C#','c').replace('D#','d').replace('F#','f').replace('G#','g').replace('A#','a')
    return s

def solution(m,musicinfos):
    answer=[0,'(None)']   # time_len, title
    m = shap_to_lower(m)
    for info in musicinfos:
        split_info = info.split(',')
        time_length = (int(split_info[1][:2])-int(split_info[0][:2]))*60+int(split_info[1][-2:])-int(split_info[0][-2:])
        title = split_info[2]
        part_notes = shap_to_lower(split_info[-1])
        full_notes = part_notes*(time_length//len(part_notes))+part_notes[:time_length%len(part_notes)]
        if m in full_notes and time_length>answer[0]:
            answer=[time_length,title]
    return answer[-1]

# 가독성이 그리 좋지는 않지만 con함수가 신기해서 가져옴, 코드 진행은 내 것과 거의 유사함
def ttt(ts, te):
    tmp = (int(te.split(":")[0]) - int(ts.split(":")[0])) * 60 + int(te.split(":")[1]) - int(ts.split(":")[1])
    return tmp


def con(s):
    while s.find("#") != -1:
        a = s.find("#")
        s = s[:a - 1] + s[a - 1].lower() + s[a + 1:]
    return s


def solution(m, musicinfos):
    m = con(m)
    ans = ''
    temp = 0
    for i in musicinfos:
        mu = i.split(',')[2]
        ss = i.split(',')[3]
        ti = ttt(i.split(',')[0], i.split(',')[1])
        ss = con(ss)
        tttt = ''
        ttmp = ti
        while ttmp > ss.__len__():
            tttt += ss
            ttmp -= ss.__len__()
        tttt += ss[:ti]
        if m in tttt and temp < ti:
            ans = mu
            temp = ti
    return ans if ans != '' else "(None)"
